#############################################################
#  1. Model Define Configs
#############################################################
ModelConfig:
  model_type: 'NextVladBERT'
  use_modal_drop: True #在训练过程中，对多模态特征的某一模态进行丢弃
  with_embedding_bn: False #对不同模态输入特征进行BN归一化
  modal_drop_rate: 0.3
  with_video_head: True #视频特征
  with_audio_head: True #音频特征
  with_text_head: True  #文本特征
  with_image_head: True # False #图片特征

  #视频特征(16384)
  video_head_type: 'NeXtVLAD'
  video_head_params:
    nextvlad_cluster_size: 128
    groups: 16
    expansion: 2
    feature_size: 1024 #inception feature dim
    max_frames: 300

  #语音特征(1024)
  audio_head_type: 'NeXtVLAD'
  audio_head_params:
    nextvlad_cluster_size: 64
    groups: 16
    expansion: 2
    feature_size: 128 #vggfish feature dim
    max_frames: 300

  #文本特征(1024)
  text_head_type: 'ALBERT'
  text_head_params:
    bert_config_json: 'pretrained/albert/albert_config_tiny.json'
    bert_emb_encode_size: 1024

  #图片特征(2048)
  image_head_type: 'resnet_v2_50'
  image_head_params: {}


  #多模态特征融合方式
  fusion_head_type: 'MLGCN'
  fusion_head_params:
    hidden1_size: 1024
    gating_reduction: 8 # reduction factor in se context gating
    drop_rate:
      video: 0.8
      audio: 0.5
      image: 0.5
      text: 0.5
      fusion: 0.8

    # MLGCN parameters
    label_word_feature_dim: 1024
    intermediary_dim1: 1024
    intermediary_dim2: 1024
    time_step: 3
    batch_size: 32
    word_dim: 768
    output_dim: 1024
    gcn_drop_rate: 0.5

  #tagging分类器参数
  tagging_classifier_type: 'Sigmoid'
  tagging_classifier_params:
    num_classes: 82 #标签数目, 按需修改

#############################################################
#2. Optimizer & Train Configs
#############################################################
OptimizerConfig:
  set_seed: False
  seed: 1
  optimizer: 'AdamOptimizer'
  optimizer_init_params: {}
  clip_gradient_norm: 1.0
  learning_rate_dict:
    video: 0.0001
    audio: 0.0001
    text: 0.00001
    image: 0.0001
    classifier: 0.01
  loss_type_dict:
    tagging: "CrossEntropyLoss"
  max_step_num: 10000
  export_model_steps: 500
  learning_rate_decay: 0.1
  warmup_steps: 1000
  start_new_model: True # 如果为True，重新训练； 如果False，则resume
  num_gpu: 1
  log_device_placement: False
  gpu_allow_growth: True
  pretrained_model:
    #     text_pretrained_model: 'pretrained/bert/chinese_L-12_H-768_A-12/bert_model.ckpt'
    text_pretrained_model: 'pretrained/albert/albert_model.ckpt'
    image_pretrained_model: 'pretrained/resnet_v2_50/resnet_v2_50.ckpt'
  train_dir: './checkpoints/tagging5k_temp' #训练模型保存目录,按需修改

#############################################################
#    3. DataSet Config
#############################################################
DatasetConfig:
  batch_size: 32
  shuffle: True
  train_data_source_list:
    train799:
      file: '../dataset/tagging/GroundTruth/datafile/train.txt'   # preprocessing脚本生成文件，按需求修改 (datafile)
      batch_size: 32

  valid_data_source_list:
    val799:
      file: '../dataset/tagging/GroundTruth/datafile/val.txt'    # preprocessing脚本生成文件，按需求修改
      batch_size: 32

  preprocess_root: 'src/dataloader/preprocess/'
  preprocess_config:
    feature:
      - name: 'video,video_frames_num,idx'
        shape: [[300,1024], [],[]]
        dtype: 'float32,int32,string'
        class: 'frames_npy_preprocess.Preprocess'
        extra_args:
          max_frames: 300
          feat_dim: 1024
          return_frames_num: True
          return_idx: True

      - name: 'audio,audio_frames_num'
        shape: [[300,128], []]
        dtype: 'float32,int32'
        class: 'frames_npy_preprocess.Preprocess'
        extra_args:
          max_frames: 300
          feat_dim: 128
          return_frames_num: True

      - name: 'image'
        shape: [[224,224,3]]
        dtype: 'float32'
        class: 'image_preprocess.Preprocess'

      - name: 'text,label_feature,in_matrix,out_matrix'
        shape: [[128],[82,768],[82, 82],[82, 82]]
        dtype: 'int64,float32,float32,float32'
        class: 'text_preprocess.Preprocess'
        extra_args:
#          vocab: 'pretrained/bert/chinese_L-12_H-768_A-12/vocab.txt'
          vocab: 'pretrained/albert/vocab.txt'
          co_occurrence_file: "dataset/co_occurrence.npy"
          label_feature_file: "dataset/label_feature.npy"
          max_len: 128
    label:
      - name: 'tagging'
        dtype: 'float32'
        shape: [[82]]   # 根据 num_classes修改
        class: 'label_preprocess.Preprocess_label_sparse_to_dense'
        extra_args:
          index_dict: '../dataset/label_id.txt'    # 按需求更改
